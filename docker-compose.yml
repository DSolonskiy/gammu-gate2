version: "3.8"

########################
#  СЕТЬ и VOLUME       #
########################
networks:
  smsnet:
    driver: bridge

volumes:
  mariadb_data:

########################
#  СЕРВИСЫ             #
########################
services:
  # ---------- База ----------
  mariadb:
    image: mariadb:latest
    container_name: mariadb
    restart: always
    command: --wait_timeout=28800 --interactive_timeout=28800
    networks: 
      - smsnet
    environment:
      - MYSQL_ROOT_PASSWORD=UP5yeFxRcvtMBzjdfNmT6p
      - MYSQL_USER=sms-gateway
      - MYSQL_PASSWORD=Bpj7hXNCextgnzSWckFybV
      - MYSQL_DATABASE=smsd
    volumes:
      - mariadb_data:/var/lib/mysql
      - /home/webadmin/docker/portainer/data/compose/1/db-init:/docker-entrypoint-initdb.d:ro   # ← новый bind
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 15s
      interval: 15s
      timeout: 5s
      retries: 5
  # ---------- Единственный модем ----------
  gammu_modem_01:
    image: tomaszrim/gammu:latest
    container_name: gammu_modem_01
    restart: always
    privileged: true
   # environment:
   #   - GAMMU_CONFIG=/opt/configs/gammu/gammurc
    networks: 
      - smsnet
    depends_on: 
      - mariadb
    # Пробрасываем реальное устройство по by-id внутрь как /dev/modem
    devices:
       - /dev/serial/by-id/usb-HUAWEI_Technology_HUAWEI_Mobile-if00-port0:/dev/usb-HUAWEI_Technology_HUAWEI_Mobile-if00-port0
       #- /dev/ttyUSB0:/dev/ttyUSB0
    # Конфиги и (опционально) пользовательские скрипты
    volumes:
      # - /var/snap/docker/common/var-lib-docker/volumes/portainer_data/_data/compose/14/configs/gammu_modem_01:/opt/configs/gammu:ro
      # - /var/snap/docker/common/var-lib-docker/volumes/portainer_data/_data/compose/14//scripts:/usr/local/bin:ro
      - /home/webadmin/docker/portainer/data/compose/1/configs/gammu_modem_01:/opt/configs/gammu:ro
      - /home/webadmin/docker/portainer/data/compose/1/scripts:/usr/local/bin:ro
    # Запускаем smsd сразу в foreground, чтобы логи шли в stdout
    #command: ["sh","/usr/local/bin/start-smsd.sh"]
    tmpfs:
      - /dev/shm
    command: ["gammu-smsd", "-c", "/opt/configs/gammu/gammu-smsdrc"]
    healthcheck:
      test: ["CMD-SHELL", "pgrep -x gammu-smsd >/dev/null || exit 1"]
      interval: 1m
      retries: 3
      start_period: 40s
  gammu_modem_02:
    image: tomaszrim/gammu:latest
    container_name: gammu_modem_02
    restart: always
    privileged: true
   # environment:
   #   - GAMMU_CONFIG=/opt/configs/gammu/gammurc
    networks: 
      - smsnet
    depends_on: 
      - mariadb
    # Пробрасываем реальное устройство по by-id внутрь как /dev/modem
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
      #- /dev/ttyUSB2:/dev/modem
    # Конфиги и (опционально) пользовательские скрипты
    volumes:
      # - /var/snap/docker/common/var-lib-docker/volumes/portainer_data/_data/compose/14/configs/gammu_modem_02:/opt/configs/gammu:ro
      # - /var/snap/docker/common/var-lib-docker/volumes/portainer_data/_data/compose/14//scripts:/usr/local/bin:ro
       - /home/webadmin/docker/portainer/data/compose/1/configs/gammu_modem_02:/opt/configs/gammu:ro
       - /home/webadmin/docker/portainer/data/compose/1/scripts:/usr/local/bin:ro
    # Запускаем smsd сразу в foreground, чтобы логи шли в stdout
    #command: ["sh","/usr/local/bin/start-smsd.sh"]
    tmpfs:
      - /dev/shm
    command: ["gammu-smsd", "-c", "/opt/configs/gammu/gammu-smsdrc"]
    healthcheck:
      test: ["CMD-SHELL", "pgrep -x gammu-smsd >/dev/null || exit 1"]
      interval: 1m
      retries: 3
      start_period: 40s
